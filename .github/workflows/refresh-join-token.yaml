name: Refresh K8s Join Token

on:
  schedule:
    - cron: '0 */12 * * *' # every 12 hours
  workflow_dispatch:       # allow manual trigger too

jobs:
  refresh-token:
    runs-on: ubuntu-latest

    # Add AWS environment variables
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS CLI
      run: |
        echo "=== Configuring AWS CLI ==="
        aws configure set region $AWS_REGION
        aws configure set default.region $AWS_REGION
        
        echo "=== AWS Environment Check ==="
        echo "AWS_REGION: $AWS_REGION"
        echo "AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"
        echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:0:10}..."
        
        echo "=== AWS CLI Version ==="
        aws --version
        
        echo "=== AWS Identity Check ==="
        aws sts get-caller-identity
        
        echo "=== AWS Region Check ==="
        aws configure get region
        
        echo "=== Test Secrets Manager Access ==="
        aws secretsmanager list-secrets --region $AWS_REGION --max-items 5
        
        echo "=== Check if K8S_JOIN_COMMAND secret exists ==="
        aws secretsmanager describe-secret --secret-id K8S_JOIN_COMMAND --region $AWS_REGION || echo "Secret does not exist yet"

    - name: Refresh join token via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.CONTROL_PLANE_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION,AWS_DEFAULT_REGION
        script: |
          echo "=== Starting join token refresh process ==="
          
          # Set AWS environment variables for the remote session
          export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          export AWS_REGION=$AWS_REGION
          export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
          
          echo "=== Remote Environment Check ==="
          echo "AWS_REGION: $AWS_REGION"
          echo "AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"
          echo "Current user: $(whoami)"
          
          # Configure AWS CLI on remote host
          echo "=== Configuring AWS CLI on remote host ==="
          aws configure set region $AWS_REGION
          aws configure set default.region $AWS_REGION
          
          # Test AWS connectivity
          echo "=== Testing AWS connectivity ==="
          aws sts get-caller-identity
          
          # Check if kubectl is working
          echo "=== Kubernetes Cluster Check ==="
          kubectl cluster-info || echo "kubectl not working or cluster not initialized"
          kubectl get nodes || echo "Cannot get nodes"
          
          # Check if kubeadm is available and list current tokens
          echo "=== Kubeadm Check ==="
          which kubeadm || echo "kubeadm not found"
          kubeadm version || echo "kubeadm version failed"
          kubeadm token list || echo "Cannot list tokens"
          
          # Download and execute the refresh script
          echo "=== Downloading refresh script ==="
          curl -O https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/refresh-k8s-join-token.sh
          
          echo "=== Making script executable ==="
          chmod +x refresh-k8s-join-token.sh
          
          echo "=== Executing refresh script ==="
          ./refresh-k8s-join-token.sh
          
          echo "=== Verifying secret was updated ==="
          aws secretsmanager get-secret-value --secret-id K8S_JOIN_COMMAND --region $AWS_REGION --query SecretString --output text | head -20

    - name: Verify secret update
      run: |
        echo "=== Final Verification ==="
        echo "Checking if secret was updated successfully..."
        
        # Get the secret value and show some info about it
        SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id K8S_JOIN_COMMAND --region $AWS_REGION --query SecretString --output text)
        
        echo "Secret length: ${#SECRET_VALUE}"
        echo "Secret starts with: ${SECRET_VALUE:0:50}..."
        
        # Verify it looks like a valid kubeadm join command
        if [[ $SECRET_VALUE == *"kubeadm join"* ]]; then
          echo "✅ Secret contains valid kubeadm join command"
        else
          echo "❌ Secret does not contain valid kubeadm join command"
          echo "Full secret (first 200 chars): ${SECRET_VALUE:0:200}"
        fi