name: Daily K8s Token Refresh

on:
  schedule:
    - cron: '0 14 * * *'  # 2 PM UTC (before machines turn off at 3 PM)
  workflow_dispatch:     # Allow manual trigger

jobs:
  refresh-token:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS CLI
      run: |
        echo "=== Configuring AWS CLI ==="
        aws configure set region $AWS_REGION
        aws configure set default.region $AWS_REGION
        
        echo "=== AWS Environment Check ==="
        echo "AWS_REGION: $AWS_REGION"
        echo "AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"
        
        echo "=== AWS CLI Version ==="
        aws --version
        
        echo "=== AWS Identity Check ==="
        aws sts get-caller-identity
        
        echo "=== Test Secrets Manager Access ==="
        aws secretsmanager list-secrets --region $AWS_REGION --max-items 5

    - name: Refresh join token via SSH
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.CONTROL_PLANE_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_REGION,AWS_DEFAULT_REGION
        script: |
          echo "=== Daily join token refresh process ==="
          
          # Set AWS environment variables for the remote session
          export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          export AWS_REGION=$AWS_REGION
          export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
          
          # Configure AWS CLI on remote host
          echo "=== Configuring AWS CLI on remote host ==="
          aws configure set region $AWS_REGION
          aws configure set default.region $AWS_REGION
          
          # Test AWS connectivity
          echo "=== Testing AWS connectivity ==="
          aws sts get-caller-identity
          
          # Check if kubectl is working
          echo "=== Kubernetes Cluster Check ==="
          kubectl get nodes || echo "kubectl not working"
          
          # Generate new token that lasts 24 hours
          echo "=== Generating new 24-hour token ==="
          NEW_TOKEN=$(kubeadm token create --ttl 24h0m0s)
          echo "New token: $NEW_TOKEN"
          
          # Get discovery hash
          DISCOVERY_HASH="sha256:$(openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //')"
          
          # Create join command with private IP
          PRIVATE_IP="10.0.0.233"
          JOIN_CMD="sudo kubeadm join $PRIVATE_IP:6443 --token $NEW_TOKEN --discovery-token-ca-cert-hash $DISCOVERY_HASH"
          
          echo "Join command: $JOIN_CMD"
          
          # Save to secrets manager
          echo "$JOIN_CMD" > /tmp/k8s_join.sh
          aws secretsmanager put-secret-value \
              --secret-id K8S_JOIN_COMMAND \
              --secret-string file:///tmp/k8s_join.sh \
              --region $AWS_REGION
          
          echo "‚úÖ Token refresh completed successfully"
          echo "New token is valid for 24 hours"
          
          # Cleanup
          rm -f /tmp/k8s_join.sh

    - name: Verify token update
      run: |
        echo "=== Final Verification ==="
        echo "Checking if secret was updated successfully..."
        
        # Get the secret value and show some info about it
        SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id K8S_JOIN_COMMAND --region $AWS_REGION --query SecretString --output text)
        
        echo "Secret length: ${#SECRET_VALUE}"
        echo "Secret starts with: ${SECRET_VALUE:0:50}..."
        
        # Verify it looks like a valid kubeadm join command
        if [[ $SECRET_VALUE == *"kubeadm join 10.0.0.233:6443"* ]]; then
          echo "‚úÖ Secret contains valid kubeadm join command with private IP"
        else
          echo "‚ùå Secret does not contain valid kubeadm join command"
          echo "Full secret: $SECRET_VALUE"
          exit 1
        fi
        
        echo "üéâ Daily token refresh completed successfully!"