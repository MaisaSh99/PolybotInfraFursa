name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'polybot/**'
      - 'yolo/**'
  workflow_dispatch:

env:
  REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      polybot-changed: ${{ steps.changes.outputs.polybot }}
      yolo-changed: ${{ steps.changes.outputs.yolo }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            polybot:
              - 'polybot/**'
            yolo:
              - 'yolo/**'

  build-polybot:
    needs: detect-changes
    if: needs.detect-changes.outputs.polybot-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/polybot
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./polybot
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update image tags in manifests
        run: |
          # Determine environment based on branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENV="prod"
          else
            ENV="dev"
          fi
          
          # Update the image tag in deployment manifests
          NEW_TAG="${{ github.ref_name }}-${{ github.sha }}"
          sed -i "s|image: .*/polybot:.*|image: ${{ env.REGISTRY }}/polybot:${NEW_TAG}|g" k8s/applications/polybot/${ENV}/deployment.yaml
          
          # Commit and push changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/applications/polybot/${ENV}/deployment.yaml
          git commit -m "Update polybot image tag to ${NEW_TAG} for ${ENV}" || exit 0
          git push

  build-yolo:
    needs: detect-changes
    if: needs.detect-changes.outputs.yolo-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/yolo
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./yolo
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update image tags in manifests
        run: |
          # Determine environment based on branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENV="prod"
          else
            ENV="dev"
          fi
          
          # Update the image tag in deployment manifests
          NEW_TAG="${{ github.ref_name }}-${{ github.sha }}"
          sed -i "s|image: .*/yolo:.*|image: ${{ env.REGISTRY }}/yolo:${NEW_TAG}|g" k8s/applications/yolo/${ENV}/deployment.yaml
          
          # Commit and push changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add k8s/applications/yolo/${ENV}/deployment.yaml
          git commit -m "Update yolo image tag to ${NEW_TAG} for ${ENV}" || exit 0
          git push